import psi4

raw_data = """
       BMK,  -75.8941875815999936
  MGGA_MS1,  -75.9449478376999991
     B1LYP,  -75.9093745084999938
    HCTH93,  -75.9159129611999930
     MPW1K,  -75.9081640942000035
 MGGA_MS2h,  -75.9453865229999963
     TPSSh,  -75.9356376422000068
      PBE0,  -75.8531004401999951
 LRC-wPBEh,  -75.8607264426999990
    B3PW91,  -75.9058373577999959
      wB97,  -75.9170969367999930
       BOP,  -75.9203614146999968
     B3P86,  -75.9434481943000037
       M11,  -75.9004302835000004
      SCAN,  -75.9060102746000069
       GAM,  -75.9052798249999938
    M08-HX,  -75.8931050216999949
     wB97X,  -75.9118208760999948
  wB97X-D3,  -75.9109406215000035
  B5050LYP,  -75.8881726224999937
    t-HCTH,  -75.9128036505999972
       M06,  -75.8956318758999942
     SOGGA,  -75.5330454306999997
      BLYP,  -75.9197910854999947
     X3LYP,  -75.9056265823000018
    M05-2X,  -75.9152609654999964
     O3LYP,  -75.9103443103000046
 MGGA_MVSh,  -75.8805042582000056
     B1B95,  -75.9057411126999995
       M05,  -75.8973052327999937
    B97M-V,  -75.9084206699999982
      PKZB,  -75.7989349207999936
     B97-3,  -75.9132665719999977
     B97-D,  -75.8946605826999985
      TPSS,  -75.9434801330999960
   SOGGA11,  -75.9253891302000028
      BB1K,  -75.9002400626000053
     SCAN0,  -75.8938739887999958
    M06-2X,  -75.8958709972999941
      VV10,  -76.0301169882000067
     PBEOP,  -75.8665914216999937
  MGGA_MS2,  -75.9527967117000031
    MN12-L,  -75.8624191839000019
    N12-SX,  -75.8883392688999976
      dlDF,  -76.3849000689999968
   LRC-BOP,  -75.7766746395000013
      BP86,  -75.9320661930999989
   HCTH120,  -75.9204311534000027
      EDF1,  -75.9475298161000012
   LC-VV10,  -75.8490987888000063
   wB97M-V,  -75.9032700246000047
    M08-SO,  -75.8729786874000069
  MGGA_MVS,  -75.8832466667000034
   revPBE0,  -75.9007025182999939
     M06-L,  -75.9257375669999988
   t-HCTHh,  -75.9141171720000045
   HCTH407,  -75.9178934706999939
 CAM-B3LYP,  -75.9042440838999966
  MPW1PW91,  -75.9144489332999939
   MPW1B95,  -75.9019697753000031
   HCTH147,  -75.9229007652999996
    M06-HF,  -75.8907012815000002
    B3LYP5,  -75.8999956706000063
      PW91,  -75.9048121582000022
    wM05-D,  -75.9050021968999999
     B3LYP,  -75.9333683065000002
       PBE,  -75.8497228843999949
    MPWB1K,  -75.8973658932000035
     B97-K,  -75.9081259878999930
       B97,  -75.9080645707000059
    B1PW91,  -75.9172652435999993
      VSXC,  -75.9537385627999981
    BHHLYP,  -75.8995611324999970
   BP86VWN,  -75.9374335628999972
      EDF2,  -75.8933239562000068
     B97-2,  -75.9078214166000009
   wM06-D3,  -75.9089351883999939
   MPW1PBE,  -75.8911939257999961
     B97-1,  -75.9101604922999940
   wB97X-V,  -75.9040301787999994
     M11-L,  -75.9072431935999958
  LRC-wPBE,  -75.8709171480000037
     PWB6K,  -75.9601575773999969
    PW6B95,  -76.0119149480999994
    MN15-L,  -75.8478415105000039
  revTPSSh,  -75.9089592134999975
 SOGGA11-X,  -75.9025307363999957
   MN12-SX,  -75.8725696248999952
   wB97X-D,  -75.9097022512000024
   MPW1LYP,  -75.9066088473999940
     PBE50,  -75.8570795190999974
  MGGA_MS0,  -75.9576819502999996
       N12,  -75.8877823648000032
""".splitlines()

qchem_data = {}
for n, l in enumerate(raw_data):
    if not len(l): continue
    s, e = l.split(',')
    s = s.strip().upper()
    qchem_data[s] = float(e)

psi_data = {
  'B3LYP':   -75.9333721451,
 'B3LYP5':   -75.8999995010,
  'B97-1':   -75.9101668901,
  'B97-2':   -75.9078284797,
  'B97-D':   -75.8946725393,
   'BLYP':   -75.9197987029,
   'BP86':   -75.9320037376,
   'DLDF':   -76.3849040201,
'HCTH120':   -75.9204409033,
'HCTH147':   -75.9229102896,
'HCTH407':   -75.9179028204,
    'M05':   -75.8972960325,
 'M05-2X':   -75.9152561407,
    'PBE':   -75.8497303538,
   'PBE0':   -75.8531032890,
   'PW91':   -75.9046801827,
  'SOGGA':   -75.5269984581,
   'WB97':   -75.9171266331,
  'WB97X':   -75.9124276483,
'WB97X-D':   -75.9097085787
}
psi_data = {k.upper() : v for k, v in psi_data.items()}


mol = psi4.geometry("""
1 2
O
H 1 1.0
H 1 1.0 2 104.5
""")

psi4.core.set_global_option("BASIS", "6-31G")
psi4.core.set_output_file("output.dat", False)
psi4.core.set_global_option("REFERENCE","UHF")

#psi4.set_options({"dft_radial_scheme": "treutler",   # Rarely needed
#                  "dft_nuclear_scheme": "treutler"})  # Rarely needed

keys = list(set(list(psi_data)) | set(list(qchem_data))) 
#keys = [x for x in keys if "VV10" in x]
keys = ["B3LYP", "CAM-B3LYP"]
keys.sort()

print("           Functional:            libxc :      rob    qchem")

for key in keys:
   
    energy = 0 
    try:
        energy = psi4.energy(key, molecule=mol)
    except:
        continue


    qchem_energy = float('NaN')
    psi_energy = float('NaN')

    if key in list(qchem_data):
        qchem_energy = qchem_data[key]
    if key in list(psi_data):
        psi_energy = psi_data[key]

    psi_diff = abs(energy - psi_energy)
    qchem_diff = abs(energy - qchem_energy)

    spot = ""
    if (psi_diff > 1.e-6) or (qchem_diff > 1.e-4):
        spot = "*"

    qchem_energy = float('NaN')
    print("Comparison %10s: %16.10f : %8.2e %8.2e %s" % (key, energy, psi_diff, qchem_diff, spot))

import psi4

raw_data = """
      BMK,  -76.1817717171999931
 MGGA_MS1,  -76.2292773247000071
    B1LYP,  -76.1958512842000033
   HCTH93,  -76.2104473294999991
    MPW1K,  -76.2005120044999984
MGGA_MS2h,  -76.2308002872999992
    TPSSh,  -76.2233654463999954
     PBE0,  -76.1454761160999993
LRC-wPBEh,  -76.1548885137000013
   B3PW91,  -76.2048146454999937
     wB97,  -76.1971405086000004
      BOP,  -76.2056768192999954
    B3P86,  -76.2556690446999994
      M11,  -76.1894092924000006
     SCAN,  -76.2005904083000019
      GAM,  -76.1895670539999941
   M08-HX,  -76.1873863287000006
    wB97X,  -76.1965355976000041
 wB97X-D3,  -76.1989541040999967
 B5050LYP,  -76.1761004684999961
   t-HCTH,  -76.2145332433999982
      M06,  -76.1869305614000041
    SOGGA,  -75.8206504263000056
     BLYP,  -76.2101386331000015
    X3LYP,  -76.2009026308000017
   M05-2X,  -76.2070783459000012
    O3LYP,  -76.2013397677000057
MGGA_MVSh,  -76.1779414083000006
    B1B95,  -76.1926214875000056
      M05,  -76.1793972434000040
   B97M-V,  -76.1979083943000006
     PKZB,  -76.0773635829999932
    B97-3,  -76.2030277397000049
    B97-D,  -76.1850372539000062
     TPSS,  -76.2321281382999985
  SOGGA11,  -76.2026555061000010
     BB1K,  -76.1849622145000041
    SCAN0,  -76.1855330035999998
   M06-2X,  -76.1924951379999982
     VV10,  -76.3278854999999936
    PBEOP,  -76.1512636180000015
 MGGA_MS2,  -76.2383272721999958
   MN12-L,  -76.1407199697000010
   N12-SX,  -76.1661886348999957
     dlDF,  -76.6884354622000046
  LRC-BOP,  -76.0672253225999953
     BP86,  -76.2381037258000021
  HCTH120,  -76.2200708894999934
     EDF1,  -76.2429501061999986
  LC-VV10,  -76.1371843019000067
  wB97M-V,  -76.1905787638000049
   M08-SO,  -76.1758524238999968
 MGGA_MVS,  -76.1849932563000038
  revPBE0,  -76.1902459601000004
    M06-L,  -76.2104553281999983
  t-HCTHh,  -76.2117681964000013
  HCTH407,  -76.2208420692000033
CAM-B3LYP,  -76.2006317957000050
 MPW1PW91,  -76.2096624991999931
  MPW1B95,  -76.1891029766999992
  HCTH147,  -76.2248695524999960
   M06-HF,  -76.1952167047000017
   B3LYP5,  -76.1925957771999975
     PW91,  -76.2047640842999954
   wM05-D,  -76.1936388223000023
    B3LYP,  -76.2328643543000055
      PBE,  -76.1456556148000061
   MPWB1K,  -76.1823596442000053
    B97-K,  -76.1837967257999935
      B97,  -76.1968376328999994
   B1PW91,  -76.2117015982999959
     VSXC,  -76.2379777115999957
   BHHLYP,  -76.1821602865999949
  BP86VWN,  -76.2429496642999993
     EDF2,  -76.1918127816000066
    B97-2,  -76.1949367433000049
  wM06-D3,  -76.1968859696000038
  MPW1PBE,  -76.1849875645000054
    B97-1,  -76.1972144151999942
  wB97X-V,  -76.1899409795999958
    M11-L,  -76.2106761812000002
 LRC-wPBE,  -76.1675024440999948
    PWB6K,  -76.2470965274000037
   PW6B95,  -76.3047778709999989
   MN15-L,  -76.1306121525000066
 revTPSSh,  -76.1937528435999951
SOGGA11-X,  -76.1982273807000041
  MN12-SX,  -76.1521811698000022
  wB97X-D,  -76.1994640198000042
  MPW1LYP,  -76.1938387614000021
    PBE50,  -76.1459052103000005
 MGGA_MS0,  -76.2427928287000043
      N12,  -76.1636902505999984
""".splitlines()

qchem_data = {}
for n, l in enumerate(raw_data):
    if not len(l): continue
    s, e = l.split(',')
    s = s.strip().upper()
    qchem_data[s] = float(e)

psi_data = {
  'B3LYP':   -76.2328844340,
 'B3LYP5':   -76.1926158649,
  'B97-1':   -76.1972371524,
  'B97-2':   -76.1949602148,
  'B97-D':   -76.1850730428,
   'BLYP':   -76.2101689962,
   'BP86':   -76.2380636714,
   'DLDF':   -76.6884417287,
'HCTH120':   -76.2201049947,
'HCTH147':   -76.2249034644,
'HCTH407':   -76.2208755368,
    'M05':   -76.1794000770,
 'M05-2X':   -76.2070844973,
    'PBE':   -76.1456867360,
   'PBE0':   -76.1454936554,
   'PW91':   -76.2046686548,
  'SOGGA':   -75.8253118085,
   'WB97':   -76.1972799706,
  'WB97X':   -76.1985105658,
'WB97X-D':   -76.1995811046
}
psi_data = {k.upper() : v for k, v in psi_data.items()}


mol = psi4.geometry("""
-1 2
O
H 1 1.0
H 1 1.0 2 104.5
""")

psi4.core.set_global_option("BASIS", "6-31G")
psi4.core.set_output_file("output.dat", False)
psi4.core.set_global_option("REFERENCE","UHF")

#psi4.set_options({"dft_radial_scheme": "treutler",   # Rarely needed
#                  "dft_nuclear_scheme": "treutler"})  # Rarely needed

keys = list(set(list(psi_data)) | set(list(qchem_data))) 
keys.sort()

print("           Functional:            libxc :      rob    qchem")

print keys
for key in keys:
   
    energy = 0 
    try:
        energy = psi4.energy(key, molecule=mol)
    except:
        continue


    qchem_energy = float('NaN')
    psi_energy = float('NaN')

    if key in list(qchem_data):
        qchem_energy = qchem_data[key]
    if key in list(psi_data):
        psi_energy = psi_data[key]

    psi_diff = abs(energy - psi_energy)
    qchem_diff = abs(energy - qchem_energy)

    spot = ""
    if (psi_diff > 1.e-6) or (qchem_diff > 1.e-4):
        spot = "*"

    qchem_energy = float('NaN')
    print("Comparison %10s: %16.10f : %8.2e %8.2e %s" % (key, energy, psi_diff, qchem_diff, spot))

